{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gTokenVaultAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_carbonizedCollection",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "carbonizedCollection",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gTokenVault",
      "outputs": [
        {
          "internalType": "contract ImpactVaultInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getYield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawls",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161071c38038061071c83398101604081905261002f916100d5565b61003833610069565b600280546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b610605806101176000396000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461014d578063b1dd03fa1461016b578063c399ec881461018b578063d0e30db0146101a0578063f2fde38b146101a8578063f3576220146101c857600080fd5b80634e71d92d146100a157806351cff8d9146100b85780636e5837b6146100d8578063715018a6146101155780637c2628711461012a575b600080fd5b3480156100ad57600080fd5b506100b66101f2565b005b3480156100c457600080fd5b506100b66100d3366004610562565b61025c565b3480156100e457600080fd5b506001546100f8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012157600080fd5b506100b66102c4565b34801561013657600080fd5b5061013f6102d8565b60405190815260200161010c565b34801561015957600080fd5b506000546001600160a01b03166100f8565b34801561017757600080fd5b506002546100f8906001600160a01b031681565b34801561019757600080fd5b5061013f61034b565b6100b661037c565b3480156101b457600080fd5b506100b66101c3366004610562565b6103c2565b3480156101d457600080fd5b506101dd610440565b6040805192835260208301919091520161010c565b600260009054906101000a90046001600160a01b03166001600160a01b0316634e71d92d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561024257600080fd5b505af1158015610256573d6000803e3d6000fd5b50505050565b6002546040516301395c5960e31b81526001600160a01b038381166004830152306024830152909116906309cae2c890604401600060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b5050505050565b6102cc6104b8565b6102d66000610512565b565b6002546040516364c3397760e01b81523060048201526000916001600160a01b0316906364c33977906024015b602060405180830381865afa158015610322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103469190610592565b905090565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401610305565b600254604051631696d40360e11b81523060048201526001600160a01b0390911690632d2da8069034906024016000604051808303818588803b1580156102a957600080fd5b6103ca6104b8565b6001600160a01b0381166104345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61043d81610512565b50565b600254604051633d49315160e11b815230600482015260009182916001600160a01b0390911690637a9262a2906024016040805180830381865afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b091906105ab565b915091509091565b6000546001600160a01b031633146102d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561057457600080fd5b81356001600160a01b038116811461058b57600080fd5b9392505050565b6000602082840312156105a457600080fd5b5051919050565b600080604083850312156105be57600080fd5b50508051602090910151909290915056fea2646970667358221220125f337c0a5feedd90fa605a5eff127a48db98cb0fb201012943dde36fd9b4b164736f6c63430008110033",
    "sourceMap": "467:1295:49:-:0;;;659:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:31;719:10:43;936:18:31;:32::i;:::-;741:11:49;:55;;-1:-1:-1;;;;;741:55:49;;;-1:-1:-1;;;;;;741:55:49;;;;;;;;806:44;;;;;;;;;;;467:1295;;2433:187:31;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:31;;;-1:-1:-1;;;;;;2541:17:31;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:57:-;93:13;;-1:-1:-1;;;;;135:31:57;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;467:1295:49;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461014d578063b1dd03fa1461016b578063c399ec881461018b578063d0e30db0146101a0578063f2fde38b146101a8578063f3576220146101c857600080fd5b80634e71d92d146100a157806351cff8d9146100b85780636e5837b6146100d8578063715018a6146101155780637c2628711461012a575b600080fd5b3480156100ad57600080fd5b506100b66101f2565b005b3480156100c457600080fd5b506100b66100d3366004610562565b61025c565b3480156100e457600080fd5b506001546100f8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012157600080fd5b506100b66102c4565b34801561013657600080fd5b5061013f6102d8565b60405190815260200161010c565b34801561015957600080fd5b506000546001600160a01b03166100f8565b34801561017757600080fd5b506002546100f8906001600160a01b031681565b34801561019757600080fd5b5061013f61034b565b6100b661037c565b3480156101b457600080fd5b506100b66101c3366004610562565b6103c2565b3480156101d457600080fd5b506101dd610440565b6040805192835260208301919091520161010c565b600260009054906101000a90046001600160a01b03166001600160a01b0316634e71d92d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561024257600080fd5b505af1158015610256573d6000803e3d6000fd5b50505050565b6002546040516301395c5960e31b81526001600160a01b038381166004830152306024830152909116906309cae2c890604401600060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b5050505050565b6102cc6104b8565b6102d66000610512565b565b6002546040516364c3397760e01b81523060048201526000916001600160a01b0316906364c33977906024015b602060405180830381865afa158015610322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103469190610592565b905090565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401610305565b600254604051631696d40360e11b81523060048201526001600160a01b0390911690632d2da8069034906024016000604051808303818588803b1580156102a957600080fd5b6103ca6104b8565b6001600160a01b0381166104345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61043d81610512565b50565b600254604051633d49315160e11b815230600482015260009182916001600160a01b0390911690637a9262a2906024016040805180830381865afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b091906105ab565b915091509091565b6000546001600160a01b031633146102d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561057457600080fd5b81356001600160a01b038116811461058b57600080fd5b9392505050565b6000602082840312156105a457600080fd5b5051919050565b600080604083850312156105be57600080fd5b50508051602090910151909290915056fea2646970667358221220125f337c0a5feedd90fa605a5eff127a48db98cb0fb201012943dde36fd9b4b164736f6c63430008110033",
    "sourceMap": "467:1295:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:71;;;;;;;;;;;;;:::i;:::-;;986:121;;;;;;;;;;-1:-1:-1;986:121:49;;;;;:::i;:::-;;:::i;572:35::-;;;;;;;;;;-1:-1:-1;572:35:49;;;;-1:-1:-1;;;;;572:35:49;;;;;;-1:-1:-1;;;;;469:32:57;;;451:51;;439:2;424:18;572:35:49;;;;;;;;1831:101:31;;;;;;;;;;;;;:::i;1346:120:49:-;;;;;;;;;;;;;:::i;:::-;;;659:25:57;;;647:2;632:18;1346:120:49;513:177:57;1201:85:31;;;;;;;;;;-1:-1:-1;1247:7:31;1273:6;-1:-1:-1;;;;;1273:6:31;1201:85;;613:39:49;;;;;;;;;;-1:-1:-1;613:39:49;;;;-1:-1:-1;;;;;613:39:49;;;1472:140;;;;;;;;;;;;;:::i;863:117::-;;;:::i;2081:198:31:-;;;;;;;;;;-1:-1:-1;2081:198:31;;;;;:::i;:::-;;:::i;1113:150:49:-;;;;;;;;;;;;;:::i;:::-;;;;1107:25:57;;;1163:2;1148:18;;1141:34;;;;1080:18;1113:150:49;933:248:57;1269:71:49;1314:11;;;;;;;;;-1:-1:-1;;;;;1314:11:49;-1:-1:-1;;;;;1314:17:49;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:71::o;986:121::-;1051:11;;:49;;-1:-1:-1;;;1051:49:49;;-1:-1:-1;;;;;1416:15:57;;;1051:49:49;;;1398:34:57;1094:4:49;1448:18:57;;;1441:43;1051:11:49;;;;:23;;1333:18:57;;1051:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:121;:::o;1831:101:31:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1346:120:49:-;1424:11;;:35;;-1:-1:-1;;;1424:35:49;;1453:4;1424:35;;;451:51:57;1398:7:49;;-1:-1:-1;;;;;1424:11:49;;:20;;424:18:57;;1424:35:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1417:42;;1346:120;:::o;1472:140::-;1567:11;;1552:53;;-1:-1:-1;;;1552:53:49;;1599:4;1552:53;;;451:51:57;1526:7:49;;-1:-1:-1;;;;;1567:11:49;;1552:38;;424:18:57;;1552:53:49;305:203:57;863:117:49;918:11;;:55;;-1:-1:-1;;;918:55:49;;967:4;918:55;;;451:51:57;-1:-1:-1;;;;;918:11:49;;;;:22;;948:9;;424:18:57;;918:55:49;;;;;;;;;;;;;;;;;;;2081:198:31;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:31;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:31;;1886:2:57;2161:73:31::1;::::0;::::1;1868:21:57::0;1925:2;1905:18;;;1898:30;1964:34;1944:18;;;1937:62;-1:-1:-1;;;2015:18:57;;;2008:36;2061:19;;2161:73:31::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1113:150:49:-;1218:11;;:38;;-1:-1:-1;;;1218:38:49;;1250:4;1218:38;;;451:51:57;1167:13:49;;;;-1:-1:-1;;;;;1218:11:49;;;;:23;;424:18:57;;1218:38:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:45;;;;1113:150;;:::o;1359:130:31:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:31;719:10:43;1422:23:31;1414:68;;;;-1:-1:-1;;;1414:68:31;;2543:2:57;1414:68:31;;;2525:21:57;;;2562:18;;;2555:30;2621:34;2601:18;;;2594:62;2673:18;;1414:68:31;2341:356:57;2433:187:31;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:31;;;-1:-1:-1;;;;;;2541:17:31;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:286:57:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:57;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:57:o;1495:184::-;1565:6;1618:2;1606:9;1597:7;1593:23;1589:32;1586:52;;;1634:1;1631;1624:12;1586:52;-1:-1:-1;1657:16:57;;1495:184;-1:-1:-1;1495:184:57:o;2091:245::-;2170:6;2178;2231:2;2219:9;2210:7;2206:23;2202:32;2199:52;;;2247:1;2244;2237:12;2199:52;-1:-1:-1;;2270:16:57;;2326:2;2311:18;;;2305:25;2270:16;;2305:25;;-1:-1:-1;2091:245:57:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "carbonizedCollection()": "6e5837b6",
    "claim()": "4e71d92d",
    "deposit()": "d0e30db0",
    "gTokenVault()": "b1dd03fa",
    "getDeposit()": "c399ec88",
    "getYield()": "7c262871",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "withdraw(address)": "51cff8d9",
    "withdrawls()": "f3576220"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gTokenVaultAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_carbonizedCollection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"carbonizedCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gTokenVault\",\"outputs\":[{\"internalType\":\"contract ImpactVaultInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawls\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Bridger Zoske\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Carbonizer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Carbonizer.sol\":\"Carbonizer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x220c4a5af915e656be2aaa85ca57505d102418e476b1e2ef6c62e0c6ac143871\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed2c33173f7e7000889abed7c339b7a0e3b7867cdea546caaf6bc917ef1039c\",\"dweb:/ipfs/QmQ4Ye5h7jm6V4CdhT3r6hvf25DtiV74ErppQVE4SpRKj6\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/Carbonizer.sol\":{\"keccak256\":\"0xa9534b241768607e72d965b4bfcc2ed289fe86bb0ed11756273c8b148a3154c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec5b21705defeaac671646dbb86643c6ef9b3898fd9ad654e49d6404ce771305\",\"dweb:/ipfs/QmWApLLtGn6hp5ZgLjRm2Yb9q8AXJBFfBUnNynzKj7YQUd\"]},\"src/interface/ICarbonizer.sol\":{\"keccak256\":\"0x0c20903d427b36e9da489812f518fefcd676e836218d84ed2406b0c95d66c00d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eb838934e144a94c441c5042e70fb7c4d817a970a7766c9be5c166061ccb3c8d\",\"dweb:/ipfs/QmPdtAeF6BUSAoD6tpT4mBevVbD7wjfemdjv4J87BWkbu1\"]},\"src/interface/ImpactVaultInterface.sol\":{\"keccak256\":\"0xd82dee57ae83212d54198437a485a201627a3d331803fe98c711e1147f0c8e82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fbe45c6769a4aa6bbd5e035b4ad6fabadb1ca52a2e1559222057601eff0fb3a0\",\"dweb:/ipfs/QmcmsqfkTH2BAxAJBX7RfZBvKvmr67bp3wF2fBGSE9C3uf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_gTokenVaultAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_carbonizedCollection",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "carbonizedCollection",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gTokenVault",
          "outputs": [
            {
              "internalType": "contract ImpactVaultInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getYield",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawls",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Carbonizer.sol": "Carbonizer"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x220c4a5af915e656be2aaa85ca57505d102418e476b1e2ef6c62e0c6ac143871",
        "urls": [
          "bzz-raw://6ed2c33173f7e7000889abed7c339b7a0e3b7867cdea546caaf6bc917ef1039c",
          "dweb:/ipfs/QmQ4Ye5h7jm6V4CdhT3r6hvf25DtiV74ErppQVE4SpRKj6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/Carbonizer.sol": {
        "keccak256": "0xa9534b241768607e72d965b4bfcc2ed289fe86bb0ed11756273c8b148a3154c4",
        "urls": [
          "bzz-raw://ec5b21705defeaac671646dbb86643c6ef9b3898fd9ad654e49d6404ce771305",
          "dweb:/ipfs/QmWApLLtGn6hp5ZgLjRm2Yb9q8AXJBFfBUnNynzKj7YQUd"
        ],
        "license": "MIT"
      },
      "src/interface/ICarbonizer.sol": {
        "keccak256": "0x0c20903d427b36e9da489812f518fefcd676e836218d84ed2406b0c95d66c00d",
        "urls": [
          "bzz-raw://eb838934e144a94c441c5042e70fb7c4d817a970a7766c9be5c166061ccb3c8d",
          "dweb:/ipfs/QmPdtAeF6BUSAoD6tpT4mBevVbD7wjfemdjv4J87BWkbu1"
        ],
        "license": "Apache-2.0"
      },
      "src/interface/ImpactVaultInterface.sol": {
        "keccak256": "0xd82dee57ae83212d54198437a485a201627a3d331803fe98c711e1147f0c8e82",
        "urls": [
          "bzz-raw://fbe45c6769a4aa6bbd5e035b4ad6fabadb1ca52a2e1559222057601eff0fb3a0",
          "dweb:/ipfs/QmcmsqfkTH2BAxAJBX7RfZBvKvmr67bp3wF2fBGSE9C3uf"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Carbonizer.sol",
    "id": 32101,
    "exportedSymbols": {
      "AddressUpgradeable": [
        27162
      ],
      "Carbonizer": [
        32100
      ],
      "Context": [
        30507
      ],
      "ICarbonizer": [
        32491
      ],
      "IERC20": [
        28599
      ],
      "IERC20Metadata": [
        28624
      ],
      "IERC20PermitUpgradeable": [
        25061
      ],
      "IERC20Upgradeable": [
        25025
      ],
      "ImpactVaultInterface": [
        32582
      ],
      "Ownable": [
        28413
      ],
      "SafeERC20Upgradeable": [
        25342
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1730:49",
    "nodes": [
      {
        "id": 31953,
        "nodeType": "PragmaDirective",
        "src": "33:23:49",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 31954,
        "nodeType": "ImportDirective",
        "src": "58:88:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32101,
        "sourceUnit": 25343,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31955,
        "nodeType": "ImportDirective",
        "src": "147:52:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32101,
        "sourceUnit": 28414,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31956,
        "nodeType": "ImportDirective",
        "src": "200:75:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32101,
        "sourceUnit": 28625,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31957,
        "nodeType": "ImportDirective",
        "src": "276:56:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32101,
        "sourceUnit": 28600,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31958,
        "nodeType": "ImportDirective",
        "src": "333:46:49",
        "nodes": [],
        "absolutePath": "src/interface/ImpactVaultInterface.sol",
        "file": "./interface/ImpactVaultInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32101,
        "sourceUnit": 32583,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31959,
        "nodeType": "ImportDirective",
        "src": "380:37:49",
        "nodes": [],
        "absolutePath": "src/interface/ICarbonizer.sol",
        "file": "./interface/ICarbonizer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32101,
        "sourceUnit": 32492,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32100,
        "nodeType": "ContractDefinition",
        "src": "467:1295:49",
        "nodes": [
          {
            "id": 31968,
            "nodeType": "UsingForDirective",
            "src": "517:49:49",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 31965,
              "name": "SafeERC20Upgradeable",
              "nameLocations": [
                "523:20:49"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25342,
              "src": "523:20:49"
            },
            "typeName": {
              "id": 31967,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31966,
                "name": "IERC20Upgradeable",
                "nameLocations": [
                  "548:17:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25025,
                "src": "548:17:49"
              },
              "referencedDeclaration": 25025,
              "src": "548:17:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$25025",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "id": 31970,
            "nodeType": "VariableDeclaration",
            "src": "572:35:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e5837b6",
            "mutability": "mutable",
            "name": "carbonizedCollection",
            "nameLocation": "587:20:49",
            "scope": 32100,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31969,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31973,
            "nodeType": "VariableDeclaration",
            "src": "613:39:49",
            "nodes": [],
            "constant": false,
            "functionSelector": "b1dd03fa",
            "mutability": "mutable",
            "name": "gTokenVault",
            "nameLocation": "641:11:49",
            "scope": 32100,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
              "typeString": "contract ImpactVaultInterface"
            },
            "typeName": {
              "id": 31972,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31971,
                "name": "ImpactVaultInterface",
                "nameLocations": [
                  "613:20:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32582,
                "src": "613:20:49"
              },
              "referencedDeclaration": 32582,
              "src": "613:20:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                "typeString": "contract ImpactVaultInterface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31991,
            "nodeType": "FunctionDefinition",
            "src": "659:198:49",
            "nodes": [],
            "body": {
              "id": 31990,
              "nodeType": "Block",
              "src": "731:126:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31980,
                      "name": "gTokenVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31973,
                      "src": "741:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                        "typeString": "contract ImpactVaultInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31982,
                          "name": "_gTokenVaultAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31975,
                          "src": "776:19:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31981,
                        "name": "ImpactVaultInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32582,
                        "src": "755:20:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ImpactVaultInterface_$32582_$",
                          "typeString": "type(contract ImpactVaultInterface)"
                        }
                      },
                      "id": 31983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:41:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                        "typeString": "contract ImpactVaultInterface"
                      }
                    },
                    "src": "741:55:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                      "typeString": "contract ImpactVaultInterface"
                    }
                  },
                  "id": 31985,
                  "nodeType": "ExpressionStatement",
                  "src": "741:55:49"
                },
                {
                  "expression": {
                    "id": 31988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31986,
                      "name": "carbonizedCollection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31970,
                      "src": "806:20:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31987,
                      "name": "_carbonizedCollection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31977,
                      "src": "829:21:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "806:44:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31989,
                  "nodeType": "ExpressionStatement",
                  "src": "806:44:49"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31975,
                  "mutability": "mutable",
                  "name": "_gTokenVaultAddress",
                  "nameLocation": "679:19:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 31991,
                  "src": "671:27:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31977,
                  "mutability": "mutable",
                  "name": "_carbonizedCollection",
                  "nameLocation": "708:21:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 31991,
                  "src": "700:29:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "670:60:49"
            },
            "returnParameters": {
              "id": 31979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "731:0:49"
            },
            "scope": 32100,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32008,
            "nodeType": "FunctionDefinition",
            "src": "863:117:49",
            "nodes": [],
            "body": {
              "id": 32007,
              "nodeType": "Block",
              "src": "908:72:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32003,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "967:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          ],
                          "id": 32002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "959:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32001,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "959:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "959:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 31995,
                          "name": "gTokenVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31973,
                          "src": "918:11:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                            "typeString": "contract ImpactVaultInterface"
                          }
                        },
                        "id": 31997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "930:10:49",
                        "memberName": "depositETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32525,
                        "src": "918:22:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 32000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 31998,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "948:3:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "952:5:49",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "948:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "918:40:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 32005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:55:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32006,
                  "nodeType": "ExpressionStatement",
                  "src": "918:55:49"
                }
              ]
            },
            "baseFunctions": [
              32465
            ],
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "872:7:49",
            "overrides": {
              "id": 31993,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "899:8:49"
            },
            "parameters": {
              "id": 31992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "879:2:49"
            },
            "returnParameters": {
              "id": 31994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:0:49"
            },
            "scope": 32100,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32025,
            "nodeType": "FunctionDefinition",
            "src": "986:121:49",
            "nodes": [],
            "body": {
              "id": 32024,
              "nodeType": "Block",
              "src": "1041:66:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32017,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32010,
                        "src": "1075:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32020,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1094:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          ],
                          "id": 32019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1086:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1086:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1086:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32014,
                        "name": "gTokenVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "1051:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                          "typeString": "contract ImpactVaultInterface"
                        }
                      },
                      "id": 32016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1063:11:49",
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32532,
                      "src": "1051:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 32022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:49:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32023,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:49:49"
                }
              ]
            },
            "baseFunctions": [
              32470
            ],
            "functionSelector": "51cff8d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "995:8:49",
            "overrides": {
              "id": 32012,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1032:8:49"
            },
            "parameters": {
              "id": 32011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32010,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "1012:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 32025,
                  "src": "1004:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1003:19:49"
            },
            "returnParameters": {
              "id": 32013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:49"
            },
            "scope": 32100,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32042,
            "nodeType": "FunctionDefinition",
            "src": "1113:150:49",
            "nodes": [],
            "body": {
              "id": 32041,
              "nodeType": "Block",
              "src": "1201:62:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32037,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1250:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          ],
                          "id": 32036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1242:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1242:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1242:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32033,
                        "name": "gTokenVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "1218:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                          "typeString": "contract ImpactVaultInterface"
                        }
                      },
                      "id": 32034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1230:11:49",
                      "memberName": "withdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32541,
                      "src": "1218:23:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 32039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:38:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 32032,
                  "id": 32040,
                  "nodeType": "Return",
                  "src": "1211:45:49"
                }
              ]
            },
            "baseFunctions": [
              32477
            ],
            "functionSelector": "f3576220",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawls",
            "nameLocation": "1122:10:49",
            "overrides": {
              "id": 32027,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1144:8:49"
            },
            "parameters": {
              "id": 32026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:2:49"
            },
            "returnParameters": {
              "id": 32032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32029,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1175:5:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 32042,
                  "src": "1167:13:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32031,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1190:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 32042,
                  "src": "1182:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:34:49"
            },
            "scope": 32100,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32052,
            "nodeType": "FunctionDefinition",
            "src": "1269:71:49",
            "nodes": [],
            "body": {
              "id": 32051,
              "nodeType": "Block",
              "src": "1304:36:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32046,
                        "name": "gTokenVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "1314:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                          "typeString": "contract ImpactVaultInterface"
                        }
                      },
                      "id": 32048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1326:5:49",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32514,
                      "src": "1314:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 32049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:19:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32050,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:19:49"
                }
              ]
            },
            "baseFunctions": [
              32490
            ],
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1278:5:49",
            "overrides": {
              "id": 32044,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1295:8:49"
            },
            "parameters": {
              "id": 32043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1283:2:49"
            },
            "returnParameters": {
              "id": 32045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:0:49"
            },
            "scope": 32100,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32067,
            "nodeType": "FunctionDefinition",
            "src": "1346:120:49",
            "nodes": [],
            "body": {
              "id": 32066,
              "nodeType": "Block",
              "src": "1407:59:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32062,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1453:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          ],
                          "id": 32061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1445:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32060,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1445:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1445:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32058,
                        "name": "gTokenVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31973,
                        "src": "1424:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                          "typeString": "contract ImpactVaultInterface"
                        }
                      },
                      "id": 32059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1436:8:49",
                      "memberName": "getYield",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32567,
                      "src": "1424:20:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 32064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:35:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32057,
                  "id": 32065,
                  "nodeType": "Return",
                  "src": "1417:42:49"
                }
              ]
            },
            "baseFunctions": [
              32482
            ],
            "functionSelector": "7c262871",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getYield",
            "nameLocation": "1355:8:49",
            "overrides": {
              "id": 32054,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1375:8:49"
            },
            "parameters": {
              "id": 32053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1363:2:49"
            },
            "returnParameters": {
              "id": 32057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32056,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32067,
                  "src": "1398:7:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:9:49"
            },
            "scope": 32100,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32087,
            "nodeType": "FunctionDefinition",
            "src": "1472:140:49",
            "nodes": [],
            "body": {
              "id": 32086,
              "nodeType": "Block",
              "src": "1535:77:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32082,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1599:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Carbonizer_$32100",
                              "typeString": "contract Carbonizer"
                            }
                          ],
                          "id": 32081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1591:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32080,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1591:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1591:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 32076,
                                "name": "gTokenVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31973,
                                "src": "1567:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                                  "typeString": "contract ImpactVaultInterface"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ImpactVaultInterface_$32582",
                                  "typeString": "contract ImpactVaultInterface"
                                }
                              ],
                              "id": 32075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1559:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 32074,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1559:7:49",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1559:20:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32073,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28599,
                          "src": "1552:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$28599_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 32078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1552:28:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28599",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 32079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1581:9:49",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28556,
                      "src": "1552:38:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 32084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1552:53:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32072,
                  "id": 32085,
                  "nodeType": "Return",
                  "src": "1545:60:49"
                }
              ]
            },
            "baseFunctions": [
              32487
            ],
            "functionSelector": "c399ec88",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposit",
            "nameLocation": "1481:10:49",
            "overrides": {
              "id": 32069,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1503:8:49"
            },
            "parameters": {
              "id": 32068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1491:2:49"
            },
            "returnParameters": {
              "id": 32072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32071,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32087,
                  "src": "1526:7:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:9:49"
            },
            "scope": 32100,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32099,
            "nodeType": "ModifierDefinition",
            "src": "1618:142:49",
            "nodes": [],
            "body": {
              "id": 32098,
              "nodeType": "Block",
              "src": "1654:106:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32090,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1672:3:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1676:6:49",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1672:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 32092,
                          "name": "carbonizedCollection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31970,
                          "src": "1686:20:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1672:34:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436172626f6e697a65723a20556e617574686f72697a65642063616c6c6572",
                        "id": 32094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1708:33:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2339eac41b99e0bcb96ecb15cc44124cfd6143797eeab84143752a32546f776",
                          "typeString": "literal_string \"Carbonizer: Unauthorized caller\""
                        },
                        "value": "Carbonizer: Unauthorized caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2339eac41b99e0bcb96ecb15cc44124cfd6143797eeab84143752a32546f776",
                          "typeString": "literal_string \"Carbonizer: Unauthorized caller\""
                        }
                      ],
                      "id": 32089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1664:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:78:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32096,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:78:49"
                },
                {
                  "id": 32097,
                  "nodeType": "PlaceholderStatement",
                  "src": "1752:1:49"
                }
              ]
            },
            "name": "onlyCarbonizedCollection",
            "nameLocation": "1627:24:49",
            "parameters": {
              "id": 32088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1651:2:49"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31961,
              "name": "Ownable",
              "nameLocations": [
                "490:7:49"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28413,
              "src": "490:7:49"
            },
            "id": 31962,
            "nodeType": "InheritanceSpecifier",
            "src": "490:7:49"
          },
          {
            "baseName": {
              "id": 31963,
              "name": "ICarbonizer",
              "nameLocations": [
                "499:11:49"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32491,
              "src": "499:11:49"
            },
            "id": 31964,
            "nodeType": "InheritanceSpecifier",
            "src": "499:11:49"
          }
        ],
        "canonicalName": "Carbonizer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 31960,
          "nodeType": "StructuredDocumentation",
          "src": "419:48:49",
          "text": "@title Carbonizer\n @author Bridger Zoske"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32100,
          32491,
          28413,
          30507
        ],
        "name": "Carbonizer",
        "nameLocation": "476:10:49",
        "scope": 32101,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 49
}